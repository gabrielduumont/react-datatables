{"version":3,"sources":["exampleData.js","App.js","serviceWorker.js","index.js"],"names":["extraConfig","tableStyles","table","header","thead","tr","th","content","tbody","td","details","search","wrapper","label","input","searchingForLabel","paginationButtons","buttonsWrapper","previous","next","page","activePage","total","paginationControl","select","options","headers","data","value","onClick","alert","App","className","lang","initialPageSize","pageSizes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kLAEaA,G,MAAc,IAKdC,EAAc,CACvBC,MAAO,GAGPC,OAAQ,CACJC,MAAO,GAGPC,GAAI,GAGJC,GAAI,IAIRC,QAAS,CACLC,MAAO,GAGPH,GAAI,GAGJI,GAAI,GAGJC,QAAS,CACLL,GAAI,GAGJI,GAAI,KAKZE,OAAQ,CACJC,QAAS,GAGTC,MAAO,GAGPC,MAAO,GAGPC,kBAAmB,IAIvBC,kBAAmB,CACfJ,QAAS,GAGTK,eAAgB,GAGhBC,SAAU,GAGVC,KAAM,GAGNC,KAAM,GAGNC,WAAY,GAGZC,MAAO,IAIXC,kBAAmB,CACfX,QAAS,GAGTC,MAAO,GAGPC,MAAO,CACHU,OAAQ,GAGRC,QAAS,MAORC,EAAU,CACnB,CACI,MAAS,OACT,IAAO,OACP,KAAQ,UAEZ,CACI,MAAS,WACT,IAAO,WACP,KAAQ,UAGZ,CACI,MAAS,SACT,IAAO,SACP,KAAQ,UAEZ,CACI,MAAS,aACT,IAAO,YACP,KAAQ,QAEZ,CACI,MAAS,gBACT,IAAO,eACP,KAAQ,YAEZ,CACI,MAAS,MACT,IAAO,MACP,KAAQ,UAEZ,CACI,MAAS,aACT,IAAO,YACP,KAAQ,QAEZ,CACI,MAAS,SACT,IAAO,SACP,KAAQ,WAIHC,EAAO,CAChB,CACI,KAAQ,CACJ,MAAS,cACb,OAAU,SAACC,GAAD,OAAW,uBAAGC,QAAS,kBAAMC,MAAM,WAAxB,wDAAwFF,EAAxF,kFAErB,OAAU,CACN,MAAS,iBAEb,SAAY,CACR,MAAS,2BAEb,IAAO,CACH,MAAS,IAEb,aAAgB,CACZ,MAAS,qBAEb,UAAa,CACT,MAAS,aAEb,UAAa,CACT,MAAS,YAEb,OAAU,CACN,MAAS,UAGjB,CACI,KAAQ,CACJ,MAAS,kBAEb,OAAU,CACN,MAAS,YAEb,SAAY,CACR,MAAS,iCAEb,IAAO,CACH,MAAS,IAEb,aAAgB,CACZ,MAAS,qBAEb,UAAa,CACT,MAAS,aAEb,UAAa,CACT,MAAS,SAEb,OAAU,CACN,MAAS,UAGjB,CACI,KAAQ,CACJ,MAAS,eAEb,OAAU,CACN,MAAS,YAEb,SAAY,CACR,MAAS,qBAEb,IAAO,CACH,MAAS,IAEb,aAAgB,CACZ,MAAS,qBAEb,UAAa,CACT,MAAS,YAEb,UAAa,CACT,MAAS,YAEb,OAAU,CACN,MAAS,WC/LNG,MAnBf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAEEL,KAAMA,EACND,QAASA,EAGTzB,YAAaA,EACbgC,KAAK,QACLC,gBAAiB,GACjBC,UAAW,CAAC,GAAI,IAChBnC,YAAaA,MCRDoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.05ede5a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const extraConfig = {\r\n  //hideSearch: true,\r\n  //hidePaginationControl: true,\r\n};\r\n\r\nexport const tableStyles = {\r\n    table: {\r\n        //color: 'red',\r\n    },\r\n    header: {\r\n        thead: {\r\n            //color: 'red',\r\n        },\r\n        tr: {\r\n            //color: 'red',\r\n        },\r\n        th: {\r\n            //color: 'red',\r\n        },\r\n    },\r\n    content: {\r\n        tbody: {\r\n            //color: 'red',\r\n        },\r\n        tr: {\r\n            //color: 'red',\r\n        },\r\n        td: {\r\n            //color: 'red',\r\n        },\r\n        details: {\r\n            tr: {\r\n                //color: 'red',\r\n            },\r\n            td: {\r\n                //color: 'red',\r\n            },\r\n        }\r\n    },\r\n    search: {\r\n        wrapper: {\r\n            //backgroundColor: 'red',\r\n        },\r\n        label: {\r\n            //color: 'red',\r\n        },\r\n        input: {\r\n            //color: 'red',\r\n        },\r\n        searchingForLabel: {\r\n            //color: 'red',\r\n        }\r\n    },\r\n    paginationButtons: {\r\n        wrapper: {\r\n            //backgroundColor: 'red',\r\n        },\r\n        buttonsWrapper: {\r\n            //backgroundColor: 'red',\r\n        },\r\n        previous: {\r\n            //color: 'red',\r\n        },\r\n        next: {\r\n            //color: 'red',\r\n        },\r\n        page: {\r\n            //color: 'red',\r\n        },\r\n        activePage: {\r\n            //color: 'red',\r\n        },\r\n        total: {\r\n            //color: 'red',\r\n        }\r\n    },\r\n    paginationControl: {\r\n        wrapper: {\r\n            //backgroundColor: 'red',\r\n        },\r\n        label: {\r\n            //color: 'red',\r\n        },\r\n        input: {\r\n            select: {\r\n                //color: 'red',\r\n            },\r\n            options: {\r\n                //color: 'red',\r\n            }\r\n        }\r\n    },\r\n};\r\n\r\nexport const headers = [\r\n    {\r\n        \"label\": \"Name\",\r\n        \"key\": \"Name\",\r\n        \"type\": \"string\"\r\n    },\r\n    {\r\n        \"label\": \"Position\",\r\n        \"key\": \"Position\",\r\n        \"type\": \"string\"\r\n    }\r\n    ,\r\n    {\r\n        \"label\": \"Office\",\r\n        \"key\": \"Office\",\r\n        \"type\": \"string\"\r\n    },\r\n    {\r\n        \"label\": \"Start Time\",\r\n        \"key\": \"StartTime\",\r\n        \"type\": \"time\"\r\n    },\r\n    {\r\n        \"label\": \"Some DateTime\",\r\n        \"key\": \"SomeDateTime\",\r\n        \"type\": \"datetime\"\r\n    },\r\n    {\r\n        \"label\": \"Age\",\r\n        \"key\": \"Age\",\r\n        \"type\": \"number\"\r\n    },\r\n    {\r\n        \"label\": \"Start date\",\r\n        \"key\": \"StartDate\",\r\n        \"type\": \"date\"\r\n    },\r\n    {\r\n        \"label\": \"Salary\",\r\n        \"key\": \"Salary\",\r\n        \"type\": \"number\"\r\n    }\r\n];\r\n\r\nexport const data = [\r\n    {\r\n        \"Name\": {\r\n            \"value\": \"Ana Baggins\",\r\n        \"parser\": (value) => <p onClick={() => alert(\"hello\")}>I'm being rendered by a react component. My value is {value} and datatables won't be able to filter or order me. Also, you can click me.</p>\r\n        },\r\n        \"Office\": {\r\n            \"value\": \"San Francisco\"\r\n        },\r\n        \"Position\": {\r\n            \"value\": \"Junior Technical Author\"\r\n        },\r\n        \"Age\": {\r\n            \"value\": 75,\r\n        },\r\n        \"SomeDateTime\": {\r\n            \"value\": \"2008-1-8 08:00:00\"\r\n        },\r\n        \"StartDate\": {\r\n            \"value\": \"11/1/2008\"\r\n        },\r\n        \"StartTime\": {\r\n            \"value\": \"08:00:00\"\r\n        },\r\n        \"Salary\": {\r\n            \"value\": 6691.52\r\n        }\r\n    },\r\n    {\r\n        \"Name\": {\r\n            \"value\": \"Daniel Baggins\"\r\n        },\r\n        \"Office\": {\r\n            \"value\": \"New York\"\r\n        },\r\n        \"Position\": {\r\n            \"value\": \"Chief Executive Officer (CEO)\"\r\n        },\r\n        \"Age\": {\r\n            \"value\": 67\r\n        },\r\n        \"SomeDateTime\": {\r\n            \"value\": \"2008-1-9 08:00:00\"\r\n        },\r\n        \"StartDate\": {\r\n            \"value\": \"19/5/2002\"\r\n        },\r\n        \"StartTime\": {\r\n            \"value\": \"09:00\"\r\n        },\r\n        \"Salary\": {\r\n            \"value\": 2304.52\r\n        }\r\n    },\r\n    {\r\n        \"Name\": {\r\n            \"value\": \"Daniel Zonk\"\r\n        },\r\n        \"Office\": {\r\n            \"value\": \"New York\"\r\n        },\r\n        \"Position\": {\r\n            \"value\": \"Software Engineer\"\r\n        },\r\n        \"Age\": {\r\n            \"value\": 51\r\n        },\r\n        \"SomeDateTime\": {\r\n            \"value\": \"2008-1-8 09:00:00\"\r\n        },\r\n        \"StartDate\": {\r\n            \"value\": \"6/2/2006\"\r\n        },\r\n        \"StartTime\": {\r\n            \"value\": \"08:00:15\"\r\n        },\r\n        \"Salary\": {\r\n            \"value\": 7187.52\r\n        }\r\n    },\r\n];\r\n\r\nexport default null;\r\n","import React from 'react';\r\n\r\nimport { DataTable } from '@gabrielduumont/react-datatables';\r\nimport '@gabrielduumont/react-datatables/dist/index.css';\r\n\r\nimport { data, headers, extraConfig, tableStyles } from './exampleData';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DataTable\r\n        //required props\r\n        data={data}\r\n        headers={headers}\r\n\r\n        //optional props\r\n        tableStyles={tableStyles}\r\n        lang='pt-br'\r\n        initialPageSize={25}\r\n        pageSizes={[25, 30]}\r\n        extraConfig={extraConfig}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}